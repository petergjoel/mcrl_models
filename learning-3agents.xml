<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.5//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_5.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int AgentNum = 3;
typedef int[0,AgentNum-1] AgentScale;
const int TaskNum = 4;
const int EventNum = 0;
const int MilestoneNum = 4;
const int MaxIteration = 1;
const int RegularTaskNum[AgentNum] = {3,3,3};
const int MAXTIME = 500;
//const int REWARDRATE = 2000;

int[-1,MilestoneNum] position[AgentNum] = {0,0,0};
bool tf[AgentNum][TaskNum]={{true,false,false,false},{true,false,false,false},{true,false,false,false}};
bool ts[AgentNum][TaskNum]={{true,false,false,false},{true,false,false,false},{true,false,false,false}};
const int[0,TaskNum] rules[MilestoneNum] = {0,1,2,3};

int iteration[AgentNum] = {0,0,0};

clock globalTime;
bool idle[AgentNum] = {true,true,true};

broadcast chan someoneDone[MilestoneNum];

int tasks_finished() 
{
    int a;
    int t;
    int finished = 0;
    for(a : AgentScale) 
    {
        for(t = 0; t &lt; TaskNum; ++t)
        {
            if(tf[a][t]) ++finished;
        }
        finished += iteration[a]*TaskNum;
    }
    return finished;
}

//int penalty = 0; 
//int[0,5] mistakes[AgentNum];
void punish(int agentID, int currentPosition, int targetPosition)
{
    /*int currentTask = rules[currentPosition];
    int targetTask = rules[targetPosition];
    bool ready = idle[agentID]&amp;&amp;iteration[agentID]&lt;MaxIteration;
    bool currentFinished = tf[agentID][currentTask];
    bool targetFinished = tf[agentID][targetTask];
    bool rightChoice = currentFinished&amp;!targetFinished;

    if(!rightChoice)
    {
        if(mistakes[agentID] &lt; 5)
        {
            mistakes[agentID]++;
        }
        if(penalty &lt;= MAXTIME)
        {
            penalty = penalty + 10;
        }
    }*/

    idle[agentID] = false;
}

void reward(int agentID)
{
    /*if(mistakes[agentID] &gt; 0)
    {
        mistakes[agentID]--;
    }*/
}

bool isNecessary(int agentID, int taskID)
{
    return !tf[agentID][taskID]&amp;&amp;iteration[agentID]&lt;MaxIteration;
}

bool isBusy(int taskID)
{
    int id = 0;
    bool busy = false;


    for(id = 0; id &lt; AgentNum; id++)
    {
        if(ts[id][taskID])
        {
            busy = true;
            return busy;
        }
    }

    return busy;
}

bool isReady(int agentID, int currentPosition, int targetPosition)
{
    int currentTask = rules[currentPosition];
    int targetTask = rules[targetPosition];
    bool currentFinished = tf[agentID][currentTask];
    bool targetFinished = tf[agentID][targetTask];
    bool jobDone = currentFinished || (!targetFinished);
    bool ready = idle[agentID]&amp;&amp;iteration[agentID]&lt;MaxIteration;

    //return ready&amp;&amp;(jobDone||mistakes[agentID]&lt;4);
    return ready &amp;&amp; jobDone;
    //return ready;
}

bool shouldWait(int agentID)
{
    int currentPosition, currentTask;
    bool currentFinished, ready, wait, busy;

    currentPosition = position[agentID];
    if(currentPosition != -1)
    {
        currentTask = rules[currentPosition];
        currentFinished = tf[agentID][currentTask];
        ready = idle[agentID]&amp;&amp;iteration[agentID]&lt;MaxIteration;
        busy = isBusy(currentTask);
        wait = !currentFinished &amp;&amp; ready &amp;&amp; busy;
    }
    else
    {
        wait = false;
    }

    return wait;   
}


</declaration>
	<template>
		<name>Movement0</name>
		<parameter>const AgentScale id</parameter>
		<declaration>clock t;
</declaration>
		<location id="id0" x="0" y="-238">
			<name x="-10" y="-268">P0</name>
			<committed/>
		</location>
		<location id="id1" x="-416" y="-102">
			<name x="-426" y="-132">F0T1</name>
			<label kind="invariant" x="-399" y="-85">t&lt;=25</label>
		</location>
		<location id="id2" x="0" y="-127">
			<name x="-10" y="-157">F0T2</name>
			<label kind="invariant" x="-10" y="-112">t&lt;=26</label>
		</location>
		<location id="id3" x="408" y="-102">
			<name x="398" y="-132">F0T3</name>
			<label kind="invariant" x="398" y="-87">t&lt;=30</label>
		</location>
		<location id="id4" x="-416" y="34">
			<name x="-446" y="42">P1</name>
			<label kind="exponentialrate" x="-426" y="68">1</label>
		</location>
		<location id="id5" x="-204" y="34">
			<name x="-214" y="4">F1T2</name>
			<label kind="invariant" x="-170" y="8">t&lt;=15</label>
		</location>
		<location id="id6" x="0" y="178">
			<name x="-10" y="148">F1T3</name>
			<label kind="invariant" x="-8" y="187">t&lt;=18</label>
		</location>
		<location id="id7" x="0" y="34">
			<name x="-10" y="4">P2</name>
			<label kind="exponentialrate" x="-10" y="68">1</label>
		</location>
		<location id="id8" x="-204" y="-102">
			<name x="-214" y="-132">F2T1</name>
			<label kind="invariant" x="-214" y="-87">t&lt;=15</label>
		</location>
		<location id="id9" x="204" y="-102">
			<name x="194" y="-132">F2T3</name>
			<label kind="invariant" x="194" y="-87">t&lt;=12</label>
		</location>
		<location id="id10" x="408" y="34">
			<name x="398" y="4">P3</name>
			<label kind="exponentialrate" x="398" y="68">1</label>
		</location>
		<location id="id11" x="0" y="272">
			<name x="-10" y="242">F3T1</name>
			<label kind="invariant" x="-10" y="287">t&lt;=18</label>
		</location>
		<location id="id12" x="204" y="34">
			<name x="161" y="42">F3T2</name>
			<label kind="invariant" x="194" y="49">t&lt;=12</label>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-475" y="-195">isReady(id,0,1)</label>
			<label kind="assignment" x="-603" y="-178">t=0,position[id]=-1,punish(id,0,1)</label>
			<nail x="-416" y="-238"/>
		</transition>
		<transition controllable="false">
			<source ref="id1"/>
			<target ref="id4"/>
			<label kind="guard" x="-501" y="-76">t&gt;=25</label>
			<label kind="assignment" x="-501" y="-59">t=0,position[id]=1,idle[id]=true</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="guard" x="-51" y="-195">isReady(id,0,2)</label>
			<label kind="assignment" x="-110" y="-178">t=0,position[id]=-1,punish(id,0,2)</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id7"/>
			<label kind="guard" x="-8" y="-76">t&gt;=26</label>
			<label kind="assignment" x="-102" y="-93">t=0,position[id]=2,idle[id]=true</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id3"/>
			<label kind="guard" x="374" y="-204">isReady(id,0,3)</label>
			<label kind="assignment" x="247" y="-187">t=0,position[id]=-1,punish(id,0,3)</label>
			<nail x="408" y="-238"/>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id10"/>
			<label kind="guard" x="399" y="-51">t&gt;=30</label>
			<label kind="assignment" x="391" y="-68">t=0,position[id]=3,idle[id]=true</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="guard" x="-340" y="17">isReady(id,1,2)</label>
			<label kind="assignment" x="-374" y="42">t=0,position[id]=-1,punish(id,1,2)</label>
		</transition>
		<transition controllable="false">
			<source ref="id5"/>
			<target ref="id7"/>
			<label kind="guard" x="-93" y="34">t&gt;=15</label>
			<label kind="assignment" x="-178" y="59">t=0,position[id]=2,idle[id]=true</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id6"/>
			<label kind="guard" x="-221" y="110">isReady(id,1,3)</label>
			<label kind="assignment" x="-280" y="127">t=0,position[id]=-1,punish(id,1,3)</label>
		</transition>
		<transition controllable="false">
			<source ref="id6"/>
			<target ref="id10"/>
			<label kind="guard" x="136" y="102">t&gt;=18</label>
			<label kind="assignment" x="136" y="85">t=0,position[id]=3,idle[id]=true</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="guard" x="-127" y="-17">isReady(id,2,1)</label>
			<label kind="assignment" x="-263" y="-59">t=0,position[id]=-1,punish(id,2,1)</label>
		</transition>
		<transition controllable="false">
			<source ref="id8"/>
			<target ref="id4"/>
			<label kind="guard" x="-340" y="0">t&gt;=15</label>
			<label kind="assignment" x="-450" y="-25">t=0,position[id]=1,idle[id]=true</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id9"/>
			<label kind="guard" x="85" y="-76">isReady(id,2,3)</label>
			<label kind="assignment" x="17" y="-34">t=0,position[id]=-1,punish(id,2,3)</label>
		</transition>
		<transition controllable="false">
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="guard" x="314" y="-25">t&gt;=12</label>
			<label kind="assignment" x="127" y="-51">t=0,position[id]=3,idle[id]=true</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="guard" x="212" y="178">isReady(id,3,1)</label>
			<label kind="assignment" x="119" y="204">t=0,position[id]=-1,punish(id,3,1)</label>
			<nail x="408" y="119"/>
		</transition>
		<transition controllable="false">
			<source ref="id11"/>
			<target ref="id4"/>
			<label kind="guard" x="-255" y="178">t&gt;=18</label>
			<label kind="assignment" x="-331" y="204">t=0,position[id]=1,idle[id]=true</label>
			<nail x="-416" y="119"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id12"/>
			<label kind="guard" x="-51" y="228">isReady(id,3,2)</label>
			<label kind="assignment" x="255" y="51">t=0,position[id]=-1,punish(id,3,2)</label>
		</transition>
		<transition controllable="false">
			<source ref="id12"/>
			<target ref="id7"/>
			<label kind="guard" x="76" y="42">t&gt;=12</label>
			<label kind="assignment" x="42" y="8">t=0,position[id]=2,idle[id]=true</label>
		</transition>
	</template>
	<template>
		<name>TaskExecution0</name>
		<parameter>const AgentScale id</parameter>
		<declaration>clock t;

void updateIteration()
{
	int i=0;
	bool finish = true;
	for(i=1;i&lt;=RegularTaskNum[id];i++)
	{
		finish &amp;= tf[id][i];
	}
	if(finish)
	{
		for(i=1;i&lt;=RegularTaskNum[id];i++)
		{
			tf[id][i]=false;
		}
		
		iteration[id]+=1;
		if(iteration[id]&gt;=MaxIteration)
		{
			iteration[id]=MaxIteration;
		}
	}
	else
	{
    	finish = true;
	}
}

</declaration>
		<location id="id13" x="-578" y="-102">
			<name x="-646" y="-136">Waiting</name>
		</location>
		<location id="id14" x="-408" y="-204">
			<name x="-418" y="-234">T0</name>
			<label kind="exponentialrate" x="-418" y="-170">1</label>
		</location>
		<location id="id15" x="-408" y="-501">
			<name x="-418" y="-531">T1</name>
			<label kind="invariant" x="-418" y="-486">t&lt;=10</label>
		</location>
		<location id="id16" x="-102" y="-204">
			<name x="-112" y="-234">T2</name>
			<label kind="invariant" x="-85" y="-221">t&lt;=8</label>
		</location>
		<location id="id17" x="-408" y="102">
			<name x="-418" y="72">T3</name>
			<label kind="invariant" x="-418" y="117">t&lt;=15</label>
		</location>
		<init ref="id14"/>
		<transition controllable="false">
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-560" y="-119">someoneDone[position[id]]?</label>
			<label kind="assignment" x="-560" y="-102">t=0,idle[id]=true</label>
			<nail x="-442" y="-102"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id13"/>
			<label kind="guard" x="-560" y="-238">shouldWait(id)</label>
			<label kind="assignment" x="-560" y="-204">t=0,idle[id]=false</label>
			<nail x="-578" y="-204"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="guard" x="-450" y="-416">((!isBusy(1))&amp;&amp;(position[id]==1))&amp;&amp;isNecessary(id,1)</label>
			<label kind="assignment" x="-442" y="-391">t=0,ts[id][1]=true,tf[id][1]=false,idle[id]=false,reward(id)</label>
		</transition>
		<transition controllable="false">
			<source ref="id15"/>
			<target ref="id14"/>
			<label kind="guard" x="-569" y="-357">t&gt;=10</label>
			<label kind="synchronisation" x="-663" y="-340">someoneDone[position[id]]!</label>
			<label kind="assignment" x="-705" y="-323">t=0,ts[id][1]=false,tf[id][1]=true,
updateIteration(),idle[id]=true</label>
			<nail x="-527" y="-365"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id16"/>
			<label kind="guard" x="-331" y="-187">((tf[id][1]&amp;&amp;!isBusy(2))&amp;&amp;(position[id]==2))&amp;&amp;isNecessary(id,2)</label>
			<label kind="assignment" x="-331" y="-170">t=0,ts[id][2]=true,tf[id][2]=false,idle[id]=false,reward(id)</label>
		</transition>
		<transition controllable="false">
			<source ref="id16"/>
			<target ref="id14"/>
			<label kind="guard" x="-340" y="-331">t&gt;=8</label>
			<label kind="synchronisation" x="-340" y="-272">someoneDone[position[id]]!</label>
			<label kind="assignment" x="-340" y="-306">t=0,ts[id][2]=false,tf[id][2]=true,
updateIteration(),idle[id]=true</label>
			<nail x="-246" y="-306"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id17"/>
			<label kind="guard" x="-824" y="-76">((tf[id][2]&amp;&amp;!isBusy(3))&amp;&amp;(position[id]==3))&amp;&amp;isNecessary(id,3)</label>
			<label kind="assignment" x="-824" y="-51">t=0,ts[id][3]=true,tf[id][3]=false,idle[id]=false,reward(id)</label>
		</transition>
		<transition controllable="false">
			<source ref="id17"/>
			<target ref="id14"/>
			<label kind="guard" x="-272" y="-85">t&gt;=15</label>
			<label kind="synchronisation" x="-272" y="-68">someoneDone[position[id]]!</label>
			<label kind="assignment" x="-272" y="-51">t=0,ts[id][3]=false,tf[id][3]=true,
updateIteration(),idle[id]=true</label>
			<nail x="-250" y="-50"/>
		</transition>
	</template>
	<system>movement0 = Movement0(0);
taskExe0 = TaskExecution0(0);
movement1 = Movement0(1);
taskExe1 = TaskExecution0(1);
movement2 = Movement0(2);
taskExe2 = TaskExecution0(2);

system movement0, taskExe0, movement1, taskExe1, movement2, taskExe2;</system>
	<queries>
		<option key="--diagnostic" value="2"/>
		<option key="--learning-method" value="-1"/>
		<option key="--good-runs" value="1000"/>
		<option key="--total-runs" value="1000"/>
		<option key="--runs-pr-state" value="1000"/>
		<option key="--alpha" value="1.0E-4"/>
		<option key="--beta" value="1.0E-4"/>
		<option key="--epsilon" value="0.001"/>
		<query>
			<formula>strategy opt = maxE(tasks_finished() - globalTime)[&lt;=MAXTIME]{
movement0.location, taskExe0.location, movement1.location, taskExe1.location, 
movement2.location, taskExe2.location,
iteration[0], iteration[1], iteration[2],
tf[0][0], tf[0][1], tf[0][2], tf[0][3], tf[1][0], tf[1][1], tf[1][2], tf[1][3],
tf[2][0], tf[2][1], tf[2][2], tf[2][3]}-&gt;{}:&lt;&gt; (((forall(i:int[0,AgentNum-1]) iteration[i]&gt;=MaxIteration)) || globalTime &gt;= MAXTIME)</formula>
			<comment>minE(globalTime-(tasks_finished()*REWARDRATE))
minE(globalTime-tasks_finished())
maxE(tasks_finished() - globalTime)</comment>
			<option key="--learning-method" value="-1"/>
			<option key="--good-runs" value="1000"/>
			<option key="--total-runs" value="1000"/>
			<option key="--runs-pr-state" value="1000"/>
			<result outcome="success" type="quality" timestamp="2021-06-28 05:02:28 +0200">
				<option key="--search-order" value="0"/>
				<option key="--statespace-consumption" value="1"/>
				<option key="--diagnostic" value="2"/>
				<option key="--backwards-order" value="1"/>
				<option key="--priority-order" value="0"/>
				<option key="--generate-strategy" value="2"/>
				<option key="--extrapolation" value="0"/>
				<option key="--hashtable-size" value="27"/>
				<option key="--filter" value="0"/>
				<option key="--learning-method" value="-1"/>
				<option key="--good-runs" value="1000"/>
				<option key="--total-runs" value="1000"/>
				<option key="--runs-pr-state" value="1000"/>
				<option key="--eval-runs" value="100"/>
				<option key="--max-iterations" value="30"/>
				<option key="--max-imitation" value="5"/>
				<option key="--reset-no-better" value="10"/>
				<option key="--max-reset-learning" value="3"/>
				<option key="--qlearning-alpha" value="2"/>
				<option key="--split-upper-t" value="1.75"/>
				<option key="--split-lower-t" value="0.15"/>
				<option key="--split-ks" value="0.25"/>
				<option key="--split-filter-rate" value="0.02"/>
				<option key="--split-filter-val" value="0.99"/>
				<option key="--discount" value="0.99"/>
				<option key="--random-search-limit" value="0.5"/>
				<option key="--deterministic-search-limit" value="0.5"/>
				<option key="--indifference-scale" value="0.005"/>
				<option key="--indifference-smoothing" value="10"/>
				<option key="--lower-delta" value="0.01"/>
				<option key="--upper-delta" value="0.01"/>
				<option key="--alpha" value="1.0E-4"/>
				<option key="--beta" value="1.0E-4"/>
				<option key="--epsilon" value="0.001"/>
				<option key="--u0" value="0.9"/>
				<option key="--u1" value="1.1"/>
				<option key="--histogram-bar-width" value="0.0"/>
				<option key="--histogram-bar-count" value="0"/>
				<option key="--resolution" value="4000"/>
				<option key="--discretization" value="0.01"/>
				<option key="--truncation-error" value="0.01"/>
				<option key="--truncation-time-error" value="0.01"/>
				
			</result>
		</query>
		<query>
			<formula>E[&lt;=MAXTIME;2000] (max: globalTime*((exists(i:int[0,AgentNum-1]) iteration[i] &lt; MaxIteration))) under opt</formula>
			<comment>A[] ((taskExe0.T1 imply movement0.P1) and (taskExe1.T1 imply movement1.P1) and (taskExe2.T1 imply movement2.P1) and 
(taskExe0.T2 imply movement0.P2) and (taskExe1.T2 imply movement1.P2) and (taskExe2.T2 imply movement2.P2) and 
(taskExe0.T3 imply movement0.P3) and (taskExe1.T3 imply movement1.P3) and (taskExe2.T3 imply movement2.P3)) opt

E&lt;&gt; ((forall(i:int[0,AgentNum-1]) iteration[i]&gt;=MaxIteration)) under opt

saveStrategy("/home/ron/uppaal/projects/q_learning/output/complete_path.out", opt)</comment>
			<result outcome="success" type="quantity" value="119.715 ± 0.463514 (99.99% CI)" timestamp="2021-06-28 05:03:28 +0200">
				<option key="--search-order" value="0"/>
				<option key="--statespace-consumption" value="1"/>
				<option key="--diagnostic" value="2"/>
				<option key="--backwards-order" value="1"/>
				<option key="--priority-order" value="0"/>
				<option key="--generate-strategy" value="2"/>
				<option key="--extrapolation" value="0"/>
				<option key="--hashtable-size" value="27"/>
				<option key="--filter" value="0"/>
				<option key="--learning-method" value="-1"/>
				<option key="--good-runs" value="1000"/>
				<option key="--total-runs" value="1000"/>
				<option key="--runs-pr-state" value="1000"/>
				<option key="--eval-runs" value="100"/>
				<option key="--max-iterations" value="30"/>
				<option key="--max-imitation" value="5"/>
				<option key="--reset-no-better" value="10"/>
				<option key="--max-reset-learning" value="3"/>
				<option key="--qlearning-alpha" value="2"/>
				<option key="--split-upper-t" value="1.75"/>
				<option key="--split-lower-t" value="0.15"/>
				<option key="--split-ks" value="0.25"/>
				<option key="--split-filter-rate" value="0.02"/>
				<option key="--split-filter-val" value="0.99"/>
				<option key="--discount" value="0.99"/>
				<option key="--random-search-limit" value="0.5"/>
				<option key="--deterministic-search-limit" value="0.5"/>
				<option key="--indifference-scale" value="0.005"/>
				<option key="--indifference-smoothing" value="10"/>
				<option key="--lower-delta" value="0.01"/>
				<option key="--upper-delta" value="0.01"/>
				<option key="--alpha" value="1.0E-4"/>
				<option key="--beta" value="1.0E-4"/>
				<option key="--epsilon" value="0.001"/>
				<option key="--u0" value="0.9"/>
				<option key="--u1" value="1.1"/>
				<option key="--histogram-bar-width" value="0.0"/>
				<option key="--histogram-bar-count" value="0"/>
				<option key="--resolution" value="4000"/>
				<option key="--discretization" value="0.01"/>
				<option key="--truncation-error" value="0.01"/>
				<option key="--truncation-time-error" value="0.01"/>
				<details>119.715 ± 0.463514 (99.99% CI)</details>
				<plot title="Probability Density Distribution" xaxis="max: globalTime * (exists (i:(const (range (int) &quot;0&quot; &quot;AgentNum - 1&quot;))) iteration[i] &lt; MaxIteration)" yaxis="probability density">
					<series title="density" type="b(0.400000)" color="0x0000ff" encoding="csv">115.0,1.0775000000000001
115.4,0.0
115.8,0.0
116.2,0.0
116.6,0.0
117.0,0.0
117.4,0.0
117.8,0.0
118.2,0.0
118.6,0.0
119.0,0.0
119.4,0.0
119.8,0.8712500000000001
120.2,0.0
120.6,0.0
121.0,0.0
121.4,0.0
121.8,0.0
122.2,0.0
122.6,0.0
123.0,0.0
123.4,0.0
123.8,0.0
124.2,0.0
124.6,0.0
125.0,0.20125
125.4,0.0
125.8,0.0
126.2,0.0
126.6,0.0
127.0,0.0
127.4,0.0
127.8,0.0
128.2,0.0
128.6,0.0
129.0,0.0
129.4,0.0
129.8,0.29375
130.2,0.0
130.6,0.0
131.0,0.0
131.4,0.0
131.8,0.0
132.2,0.0
132.6,0.0
133.0,0.05625
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">119.715,0.0
119.715,1.0775000000000001
					</series>
					<comment>Parameters: α=0.0001, ε=0.05, bucket width=0.4, bucket count=46
Runs: 2000 in total, 2000 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [115, 133]
Mean estimate of displayed sample: 119.72 ± 0.46351 (99.99% CI)</comment>
				</plot>
				<plot title="Probability Distribution" xaxis="max: globalTime * (exists (i:(const (range (int) &quot;0&quot; &quot;AgentNum - 1&quot;))) iteration[i] &lt; MaxIteration)" yaxis="probability">
					<series title="probability" type="b(0.400000)" color="0x0000ff" encoding="csv">115.0,0.43100000000000005
115.4,0.0
115.8,0.0
116.2,0.0
116.6,0.0
117.0,0.0
117.4,0.0
117.8,0.0
118.2,0.0
118.6,0.0
119.0,0.0
119.4,0.0
119.8,0.3485
120.2,0.0
120.6,0.0
121.0,0.0
121.4,0.0
121.8,0.0
122.2,0.0
122.6,0.0
123.0,0.0
123.4,0.0
123.8,0.0
124.2,0.0
124.6,0.0
125.0,0.0805
125.4,0.0
125.8,0.0
126.2,0.0
126.6,0.0
127.0,0.0
127.4,0.0
127.8,0.0
128.2,0.0
128.6,0.0
129.0,0.0
129.4,0.0
129.8,0.11750000000000001
130.2,0.0
130.6,0.0
131.0,0.0
131.4,0.0
131.8,0.0
132.2,0.0
132.6,0.0
133.0,0.0225
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">119.715,0.0
119.715,0.43100000000000005
					</series>
					<comment>Parameters: α=0.0001, ε=0.05, bucket width=0.4, bucket count=46
Runs: 2000 in total, 2000 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [115, 133]
Mean estimate of displayed sample: 119.72 ± 0.46351 (99.99% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Distribution" xaxis="max: globalTime * (exists (i:(const (range (int) &quot;0&quot; &quot;AgentNum - 1&quot;))) iteration[i] &lt; MaxIteration)" yaxis="probability">
					<series title="cumulative" type="l" color="0x000000" encoding="csv">115.0,0.0
115.4,0.43100000000000005
115.8,0.43100000000000005
116.2,0.43100000000000005
116.6,0.43100000000000005
117.0,0.43100000000000005
117.4,0.43100000000000005
117.8,0.43100000000000005
118.2,0.43100000000000005
118.6,0.43100000000000005
119.0,0.43100000000000005
119.4,0.43100000000000005
119.8,0.43100000000000005
120.2,0.7795
120.6,0.7795
121.0,0.7795
121.4,0.7795
121.8,0.7795
122.2,0.7795
122.6,0.7795
123.0,0.7795
123.4,0.7795
123.8,0.7795
124.2,0.7795
124.6,0.7795
125.0,0.7795
125.4,0.8600000000000001
125.8,0.8600000000000001
126.2,0.8600000000000001
126.6,0.8600000000000001
127.0,0.8600000000000001
127.4,0.8600000000000001
127.8,0.8600000000000001
128.2,0.8600000000000001
128.6,0.8600000000000001
129.0,0.8600000000000001
129.4,0.8600000000000001
129.8,0.8600000000000001
130.2,0.9774999999999999
130.6,0.9774999999999999
131.0,0.9774999999999999
131.4,0.9774999999999999
131.8,0.9774999999999999
132.2,0.9774999999999999
132.6,0.9774999999999999
133.0,0.9774999999999999
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">119.715,0.0
119.715,1.0
					</series>
					<comment>Parameters: α=0.0001, ε=0.05, bucket width=0.4, bucket count=46
Runs: 2000 in total, 2000 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [115, 133]
Mean estimate of displayed sample: 119.72 ± 0.46351 (99.99% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Confidence Intervals" xaxis="max: globalTime * (exists (i:(const (range (int) &quot;0&quot; &quot;AgentNum - 1&quot;))) iteration[i] &lt; MaxIteration)" yaxis="probability">
					<series title="upper limit" type="k" color="0x0000dd" encoding="csv">115.0,0.0049395322947650465
115.4,0.47460648303308023
115.8,0.47460648303308023
116.2,0.47460648303308023
116.6,0.47460648303308023
117.0,0.47460648303308023
117.4,0.47460648303308023
117.8,0.47460648303308023
118.2,0.47460648303308023
118.6,0.47460648303308023
119.0,0.47460648303308023
119.4,0.47460648303308023
119.8,0.47460648303308023
120.2,0.814291422109916
120.6,0.814291422109916
121.0,0.814291422109916
121.4,0.814291422109916
121.8,0.814291422109916
122.2,0.814291422109916
122.6,0.814291422109916
123.0,0.814291422109916
123.4,0.814291422109916
123.8,0.814291422109916
124.2,0.814291422109916
124.6,0.814291422109916
125.0,0.814291422109916
125.4,0.8885120228351311
125.8,0.8885120228351311
126.2,0.8885120228351311
126.6,0.8885120228351311
127.0,0.8885120228351311
127.4,0.8885120228351311
127.8,0.8885120228351311
128.2,0.8885120228351311
128.6,0.8885120228351311
129.0,0.8885120228351311
129.4,0.8885120228351311
129.8,0.8885120228351311
130.2,0.9882096827221789
130.6,0.9882096827221789
131.0,0.9882096827221789
131.4,0.9882096827221789
131.8,0.9882096827221789
132.2,0.9882096827221789
132.6,0.9882096827221789
133.0,0.9882096827221789
					</series>
					<series title="upper limit" type="k" color="0xdd0000" encoding="csv">115.0,0.0
115.4,0.38811707183009425
115.8,0.38811707183009425
116.2,0.38811707183009425
116.6,0.38811707183009425
117.0,0.38811707183009425
117.4,0.38811707183009425
117.8,0.38811707183009425
118.2,0.38811707183009425
118.6,0.38811707183009425
119.0,0.38811707183009425
119.4,0.38811707183009425
119.8,0.38811707183009425
120.2,0.7417736267376936
120.6,0.7417736267376936
121.0,0.7417736267376936
121.4,0.7417736267376936
121.8,0.7417736267376936
122.2,0.7417736267376936
122.6,0.7417736267376936
123.0,0.7417736267376936
123.4,0.7417736267376936
123.8,0.7417736267376936
124.2,0.7417736267376936
124.6,0.7417736267376936
125.0,0.7417736267376936
125.4,0.8277012774217962
125.8,0.8277012774217962
126.2,0.8277012774217962
126.6,0.8277012774217962
127.0,0.8277012774217962
127.4,0.8277012774217962
127.8,0.8277012774217962
128.2,0.8277012774217962
128.6,0.8277012774217962
129.0,0.8277012774217962
129.4,0.8277012774217962
129.8,0.8277012774217962
130.2,0.9617059248689969
130.6,0.9617059248689969
131.0,0.9617059248689969
131.4,0.9617059248689969
131.8,0.9617059248689969
132.2,0.9617059248689969
132.6,0.9617059248689969
133.0,0.9617059248689969
					</series>
					<series title="cumulative" type="l" color="0x000000" encoding="csv">115.0,0.0
115.4,0.43100000000000005
115.8,0.43100000000000005
116.2,0.43100000000000005
116.6,0.43100000000000005
117.0,0.43100000000000005
117.4,0.43100000000000005
117.8,0.43100000000000005
118.2,0.43100000000000005
118.6,0.43100000000000005
119.0,0.43100000000000005
119.4,0.43100000000000005
119.8,0.43100000000000005
120.2,0.7795
120.6,0.7795
121.0,0.7795
121.4,0.7795
121.8,0.7795
122.2,0.7795
122.6,0.7795
123.0,0.7795
123.4,0.7795
123.8,0.7795
124.2,0.7795
124.6,0.7795
125.0,0.7795
125.4,0.8600000000000001
125.8,0.8600000000000001
126.2,0.8600000000000001
126.6,0.8600000000000001
127.0,0.8600000000000001
127.4,0.8600000000000001
127.8,0.8600000000000001
128.2,0.8600000000000001
128.6,0.8600000000000001
129.0,0.8600000000000001
129.4,0.8600000000000001
129.8,0.8600000000000001
130.2,0.9774999999999999
130.6,0.9774999999999999
131.0,0.9774999999999999
131.4,0.9774999999999999
131.8,0.9774999999999999
132.2,0.9774999999999999
132.6,0.9774999999999999
133.0,0.9774999999999999
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">119.715,0.0
119.715,1.0
					</series>
					<comment>Parameters: α=0.0001, ε=0.05, bucket width=0.4, bucket count=46
Runs: 2000 in total, 2000 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [115, 133]
Mean estimate of displayed sample: 119.72 ± 0.46351 (99.99% CI)</comment>
				</plot>
				<plot title="Frequency Histogram" xaxis="max: globalTime * (exists (i:(const (range (int) &quot;0&quot; &quot;AgentNum - 1&quot;))) iteration[i] &lt; MaxIteration)" yaxis="count">
					<series title="count" type="b(0.400000)" color="0x0000ff" encoding="csv">115.0,862.0
115.4,0.0
115.8,0.0
116.2,0.0
116.6,0.0
117.0,0.0
117.4,0.0
117.8,0.0
118.2,0.0
118.6,0.0
119.0,0.0
119.4,0.0
119.8,697.0
120.2,0.0
120.6,0.0
121.0,0.0
121.4,0.0
121.8,0.0
122.2,0.0
122.6,0.0
123.0,0.0
123.4,0.0
123.8,0.0
124.2,0.0
124.6,0.0
125.0,161.0
125.4,0.0
125.8,0.0
126.2,0.0
126.6,0.0
127.0,0.0
127.4,0.0
127.8,0.0
128.2,0.0
128.6,0.0
129.0,0.0
129.4,0.0
129.8,235.0
130.2,0.0
130.6,0.0
131.0,0.0
131.4,0.0
131.8,0.0
132.2,0.0
132.6,0.0
133.0,45.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">119.715,0.0
119.715,862.0
					</series>
					<comment>Parameters: α=0.0001, ε=0.05, bucket width=0.4, bucket count=46
Runs: 2000 in total, 2000 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [115, 133]
Mean estimate of displayed sample: 119.72 ± 0.46351 (99.99% CI)</comment>
				</plot>
			</result>
		</query>
		<query>
			<formula>Pr[&lt;=MAXTIME] (&lt;&gt; forall(i:int[0,AgentNum-1]) iteration[i] &gt;= MaxIteration ) under opt</formula>
			<comment/>
			<result outcome="success" type="interval" value="[0.950232,1] (99.99% CI)" timestamp="2021-06-28 05:03:28 +0200">
				<option key="--search-order" value="0"/>
				<option key="--statespace-consumption" value="1"/>
				<option key="--diagnostic" value="2"/>
				<option key="--backwards-order" value="1"/>
				<option key="--priority-order" value="0"/>
				<option key="--generate-strategy" value="2"/>
				<option key="--extrapolation" value="0"/>
				<option key="--hashtable-size" value="27"/>
				<option key="--filter" value="0"/>
				<option key="--learning-method" value="-1"/>
				<option key="--good-runs" value="1000"/>
				<option key="--total-runs" value="1000"/>
				<option key="--runs-pr-state" value="1000"/>
				<option key="--eval-runs" value="100"/>
				<option key="--max-iterations" value="30"/>
				<option key="--max-imitation" value="5"/>
				<option key="--reset-no-better" value="10"/>
				<option key="--max-reset-learning" value="3"/>
				<option key="--qlearning-alpha" value="2"/>
				<option key="--split-upper-t" value="1.75"/>
				<option key="--split-lower-t" value="0.15"/>
				<option key="--split-ks" value="0.25"/>
				<option key="--split-filter-rate" value="0.02"/>
				<option key="--split-filter-val" value="0.99"/>
				<option key="--discount" value="0.99"/>
				<option key="--random-search-limit" value="0.5"/>
				<option key="--deterministic-search-limit" value="0.5"/>
				<option key="--indifference-scale" value="0.005"/>
				<option key="--indifference-smoothing" value="10"/>
				<option key="--lower-delta" value="0.01"/>
				<option key="--upper-delta" value="0.01"/>
				<option key="--alpha" value="1.0E-4"/>
				<option key="--beta" value="1.0E-4"/>
				<option key="--epsilon" value="0.001"/>
				<option key="--u0" value="0.9"/>
				<option key="--u1" value="1.1"/>
				<option key="--histogram-bar-width" value="0.0"/>
				<option key="--histogram-bar-count" value="0"/>
				<option key="--resolution" value="4000"/>
				<option key="--discretization" value="0.01"/>
				<option key="--truncation-error" value="0.01"/>
				<option key="--truncation-time-error" value="0.01"/>
				<details>[0.950232,1] (99.99% CI)</details>
				<plot title="Probability Density Distribution" xaxis="run duration in time" yaxis="probability density">
					<series title="density" type="b(1.285714)" color="0x0000ff" encoding="csv">115.0,0.3528064461124415
116.28571428528765,0.0
117.57142856310864,0.0
118.85714285687494,0.24856818303746211
120.1428571421626,0.0
121.42857143592889,0.0
122.71428571374987,0.0
124.0,0.06414664559896308
125.28571428528765,0.0
126.57142856310864,0.0
127.85714285687494,0.0
129.1428571421626,0.08820161676333714
130.4285714359289,0.0
131.7142857137499,0.024055002907790692
133.0,0.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">119.68041236867761,0.0
119.68041236867761,0.3528064461124415
					</series>
					<comment>Parameters: α=0.0001, ε=0.05, bucket width=1.2857, bucket count=15
Runs: 194 in total, 194 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [115, 133]
Mean estimate of displayed sample: 119.68 ± 1.5631 (99.99% CI)</comment>
				</plot>
				<plot title="Probability Density Confidence Intervals" xaxis="run duration in time" yaxis="probability density">
					<series title="upper limit" type="b(1.285714)" color="0xa0a0ff" encoding="csv">115.0,0.5947763105648548
116.28571428528765,0.04976781817701207
117.57142856310864,0.04976781817701207
118.85714285687494,0.45951989577743985
120.1428571421626,0.04976781817701207
121.42857143592889,0.04976781817701207
122.71428571374987,0.04976781817701207
124.0,0.18460158895841408
125.28571428528765,0.04976781817701207
126.57142856310864,0.04976781817701207
127.85714285687494,0.04976781817701207
129.1428571421626,0.22483889564712917
130.4285714359289,0.04976781817701207
131.7142857137499,0.10987812982860579
133.0,0.04976781817701207
					</series>
					<series title="lower limit" type="b(1.285714)" color="0x0000ff" encoding="csv">115.0,0.31742638490926167
116.28571428528765,0.0
117.57142856310864,0.0
118.85714285687494,0.19906909388998287
120.1428571421626,0.0
121.42857143592889,0.0
122.71428571374987,0.0
124.0,0.025739328189342492
125.28571428528765,0.0
126.57142856310864,0.0
127.85714285687494,0.0
129.1428571421626,0.04387950614440857
130.4285714359289,0.0
131.7142857137499,0.003275479497383156
133.0,0.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">119.68041236867761,0.0
119.68041236867761,0.46260380611760327
					</series>
					<comment>Parameters: α=0.0001, ε=0.05, bucket width=1.2857, bucket count=15
Runs: 194 in total, 194 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [115, 133]
Mean estimate of displayed sample: 119.68 ± 1.5631 (99.99% CI)</comment>
				</plot>
				<plot title="Probability Distribution" xaxis="run duration in time" yaxis="probability">
					<series title="probability" type="b(1.285714)" color="0x0000ff" encoding="csv">115.0,0.4536082822296435
116.28571428528765,0.0
117.57142856310864,0.0
118.85714285687494,0.3195876580137679
120.1428571421626,0.0
121.42857143592889,0.0
122.71428571374987,0.0
124.0,0.08247423594210443
125.28571428528765,0.0
126.57142856310864,0.0
127.85714285687494,0.0
129.1428571421626,0.11340209379228075
130.4285714359289,0.0
131.7142857137499,0.03092785421931772
133.0,0.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">119.68041236867761,0.0
119.68041236867761,0.4536082822296435
					</series>
					<comment>Parameters: α=0.0001, ε=0.05, bucket width=1.2857, bucket count=15
Runs: 194 in total, 194 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [115, 133]
Mean estimate of displayed sample: 119.68 ± 1.5631 (99.99% CI)</comment>
				</plot>
				<plot title="Probability Confidence Intervals" xaxis="run duration in time" yaxis="probability">
					<series title="upper limit" type="b(1.285714)" color="0xa0a0ff" encoding="csv">115.0,0.5947763105648548
116.28571428528765,0.04976781817701207
117.57142856310864,0.04976781817701207
118.85714285687494,0.45951989577743985
120.1428571421626,0.04976781817701207
121.42857143592889,0.04976781817701207
122.71428571374987,0.04976781817701207
124.0,0.18460158895841408
125.28571428528765,0.04976781817701207
126.57142856310864,0.04976781817701207
127.85714285687494,0.04976781817701207
129.1428571421626,0.22483889564712917
130.4285714359289,0.04976781817701207
131.7142857137499,0.10987812982860579
133.0,0.04976781817701207
					</series>
					<series title="lower limit" type="b(1.285714)" color="0x0000ff" encoding="csv">115.0,0.31742638490926167
116.28571428528765,0.0
117.57142856310864,0.0
118.85714285687494,0.19906909388998287
120.1428571421626,0.0
121.42857143592889,0.0
122.71428571374987,0.0
124.0,0.025739328189342492
125.28571428528765,0.0
126.57142856310864,0.0
127.85714285687494,0.0
129.1428571421626,0.04387950614440857
130.4285714359289,0.0
131.7142857137499,0.003275479497383156
133.0,0.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">119.68041236867761,0.0
119.68041236867761,0.5947763105648548
					</series>
					<comment>Parameters: α=0.0001, ε=0.05, bucket width=1.2857, bucket count=15
Runs: 194 in total, 194 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [115, 133]
Mean estimate of displayed sample: 119.68 ± 1.5631 (99.99% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Distribution" xaxis="run duration in time" yaxis="probability">
					<series title="cumulative" type="l" color="0x000000" encoding="csv">115.0,0.0
116.28571428528765,0.4536082822296435
117.57142856310864,0.4536082822296435
118.85714285687494,0.4536082822296435
120.1428571421626,0.7731958992630485
121.42857143592889,0.7731958992630485
122.71428571374987,0.7731958992630485
124.0,0.7731958992630485
125.28571428528765,0.8556701399502984
126.57142856310864,0.8556701399502984
127.85714285687494,0.8556701399502984
129.1428571421626,0.8556701399502984
130.4285714359289,0.9690721811867512
131.7142857137499,0.9690721811867512
133.0,1.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">119.68041236867761,0.0
119.68041236867761,1.0
					</series>
					<comment>Parameters: α=0.0001, ε=0.05, bucket width=1.2857, bucket count=15
Runs: 194 in total, 194 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [115, 133]
Mean estimate of displayed sample: 119.68 ± 1.5631 (99.99% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Confidence Intervals" xaxis="run duration in time" yaxis="probability">
					<series title="upper limit" type="k" color="0x0000dd" encoding="csv">115.0,0.04976781817701207
116.28571428528765,0.5947763105648548
117.57142856310864,0.5947763105648548
118.85714285687494,0.5947763105648548
120.1428571421626,0.8759743041310334
121.42857143592889,0.8759743041310334
122.71428571374987,0.8759743041310334
124.0,0.8759743041310334
125.28571428528765,0.9360022703253749
126.57142856310864,0.9360022703253749
127.85714285687494,0.9360022703253749
129.1428571421626,0.9360022703253749
130.4285714359289,0.9967245579241962
131.7142857137499,0.9967245579241962
133.0,1.0
					</series>
					<series title="upper limit" type="k" color="0xdd0000" encoding="csv">115.0,0.0
116.28571428528765,0.31742638490926167
117.57142856310864,0.31742638490926167
118.85714285687494,0.31742638490926167
120.1428571421626,0.6409600730831085
121.42857143592889,0.6409600730831085
122.71428571374987,0.6409600730831085
124.0,0.6409600730831085
125.28571428528765,0.7368556489056963
126.57142856310864,0.7368556489056963
127.85714285687494,0.7368556489056963
129.1428571421626,0.7368556489056963
130.4285714359289,0.8901219034440385
131.7142857137499,0.8901219034440385
133.0,0.9502322200158655
					</series>
					<series title="cumulative" type="l" color="0x000000" encoding="csv">115.0,0.0
116.28571428528765,0.4536082822296435
117.57142856310864,0.4536082822296435
118.85714285687494,0.4536082822296435
120.1428571421626,0.7731958992630485
121.42857143592889,0.7731958992630485
122.71428571374987,0.7731958992630485
124.0,0.7731958992630485
125.28571428528765,0.8556701399502984
126.57142856310864,0.8556701399502984
127.85714285687494,0.8556701399502984
129.1428571421626,0.8556701399502984
130.4285714359289,0.9690721811867512
131.7142857137499,0.9690721811867512
133.0,1.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">119.68041236867761,0.0
119.68041236867761,1.0
					</series>
					<comment>Parameters: α=0.0001, ε=0.05, bucket width=1.2857, bucket count=15
Runs: 194 in total, 194 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [115, 133]
Mean estimate of displayed sample: 119.68 ± 1.5631 (99.99% CI)</comment>
				</plot>
				<plot title="Frequency Histogram" xaxis="run duration in time" yaxis="count">
					<series title="count" type="b(1.285714)" color="0x0000ff" encoding="csv">115.0,88.0
116.28571428528765,0.0
117.57142856310864,0.0
118.85714285687494,62.0
120.1428571421626,0.0
121.42857143592889,0.0
122.71428571374987,0.0
124.0,16.0
125.28571428528765,0.0
126.57142856310864,0.0
127.85714285687494,0.0
129.1428571421626,22.0
130.4285714359289,0.0
131.7142857137499,6.0
133.0,0.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">119.68041236867761,0.0
119.68041236867761,88.0
					</series>
					<comment>Parameters: α=0.0001, ε=0.05, bucket width=1.2857, bucket count=15
Runs: 194 in total, 194 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [115, 133]
Mean estimate of displayed sample: 119.68 ± 1.5631 (99.99% CI)</comment>
				</plot>
			</result>
		</query>
		<query>
			<formula/>
			<comment>E[&lt;=MAXTIME;2000] (max: globalTime*((exists(i:int[0,AgentNum-1]) iteration[i] &lt; MaxIteration)))</comment>
		</query>
		<query>
			<formula/>
			<comment>Pr[&lt;=MAXTIME] (&lt;&gt; forall(i:int[0,AgentNum-1]) iteration[i] &gt;= MaxIteration )</comment>
		</query>
		<query>
			<formula/>
			<comment>//</comment>
		</query>
		<query>
			<formula/>
			<comment>saveStrategy("/home/ron/uppaal/projects/mcrl_strategy_parser/OutParser/out/complete_path.out", opt)</comment>
		</query>
		<query>
			<formula/>
			<comment>E&lt;&gt; ((forall(i:int[0,AgentNum-1]) iteration[i]&gt;=MaxIteration)) under opt</comment>
			<option key="--diagnostic" value="0"/>
		</query>
		<query>
			<formula>A&lt;&gt; ((forall(i:int[0,AgentNum-1]) iteration[i]&gt;=MaxIteration)) under opt</formula>
			<comment>Task Coverage</comment>
			<result outcome="success" type="quality" timestamp="2021-06-28 05:03:28 +0200">
				<option key="--search-order" value="0"/>
				<option key="--statespace-consumption" value="1"/>
				<option key="--diagnostic" value="2"/>
				<option key="--backwards-order" value="1"/>
				<option key="--priority-order" value="0"/>
				<option key="--generate-strategy" value="2"/>
				<option key="--extrapolation" value="0"/>
				<option key="--hashtable-size" value="27"/>
				<option key="--filter" value="0"/>
				<option key="--learning-method" value="-1"/>
				<option key="--good-runs" value="1000"/>
				<option key="--total-runs" value="1000"/>
				<option key="--runs-pr-state" value="1000"/>
				<option key="--eval-runs" value="100"/>
				<option key="--max-iterations" value="30"/>
				<option key="--max-imitation" value="5"/>
				<option key="--reset-no-better" value="10"/>
				<option key="--max-reset-learning" value="3"/>
				<option key="--qlearning-alpha" value="2"/>
				<option key="--split-upper-t" value="1.75"/>
				<option key="--split-lower-t" value="0.15"/>
				<option key="--split-ks" value="0.25"/>
				<option key="--split-filter-rate" value="0.02"/>
				<option key="--split-filter-val" value="0.99"/>
				<option key="--discount" value="0.99"/>
				<option key="--random-search-limit" value="0.5"/>
				<option key="--deterministic-search-limit" value="0.5"/>
				<option key="--indifference-scale" value="0.005"/>
				<option key="--indifference-smoothing" value="10"/>
				<option key="--lower-delta" value="0.01"/>
				<option key="--upper-delta" value="0.01"/>
				<option key="--alpha" value="1.0E-4"/>
				<option key="--beta" value="1.0E-4"/>
				<option key="--epsilon" value="0.001"/>
				<option key="--u0" value="0.9"/>
				<option key="--u1" value="1.1"/>
				<option key="--histogram-bar-width" value="0.0"/>
				<option key="--histogram-bar-count" value="0"/>
				<option key="--resolution" value="4000"/>
				<option key="--discretization" value="0.01"/>
				<option key="--truncation-error" value="0.01"/>
				<option key="--truncation-time-error" value="0.01"/>
				
			</result>
		</query>
		<query>
			<formula/>
			<comment>saveStrategy("/home/ron/uppaal/projects/mcrl_strategy_parser/OutParser/out/concise_path.out", opt)</comment>
		</query>
	</queries>
</nta>
